<%
    include("/jagg/jagg.jag");
    include("/jagg/constants.jag");
    include("/jagg/config_reader.jag");
    (function()
    {
        var mod, obj, result,
                action = request.getParameter("action"),
                site = require("/site/conf/site.json");
        var log = new Log();
        if (!jagg.getUser()) {
            print(UNAUTHORIZED_ERROR_RESPONSE);
            return;
        }
        if (action == "getTagNamesOfPersistedArtifacts") {
            mod = jagg.module("build");
            var applicationKey = request.getParameter("applicationKey");
            var applicationVersion = request.getParameter("applicationVersion");
            var tags = mod.getTagNamesOfPersistedArtifacts(applicationKey, applicationVersion);
            var tagNames = new Array();
            for (var index in
            tags){
                var user = tags[index];
                tagNames.push(user);
            }
            print(tagNames);
        } else if (action == "getBuildLogsUrl") {
            mod = jagg.module("build");
            var userName = request.getParameter("userName");		
            var applicationKey = request.getParameter("applicationKey");
            var applicationVersion = request.getParameter("applicationVersion");
            var lastBuildNo = request.getParameter("lastBuildNo");
            
            var builderBaseUrl = getProperty(BASE_URL);
            var tenantDomain = userName.split("@")[1];
            var buildLogUrl = builderBaseUrl + "/t/" + tenantDomain +  "/webapps/jenkins/job/" + applicationKey + "-" + applicationVersion + "-default/" + lastBuildNo + "/consoleText";
            print(buildLogUrl);
        } else {
            throw new Error("Invalid action specified");
        }
    }
    ()
    )
    ;
%>
