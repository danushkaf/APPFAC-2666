<%
include("/jagg/jagg.jag");
include("/jagg/constants.jag");
include("/jagg/config_reader.jag");
(function () {
    var buildModule, resourcesModule, lifeCycleModule, obj, result,
            action = request.getParameter("action"),
            site = require("/site/conf/site.json");
    var log = new Log("blocks/build/add/ajax/add.jag");
    if (!jagg.getUser()) {
        print(UNAUTHORIZED_ERROR_RESPONSE);
        return;
    }
	if (action == "deployArtifact") {
   	    buildModule = jagg.module("build");
        var response = {};
		var applicationId = request.getParameter("applicationKey");
		var stage = request.getParameter("stage");
		var version = request.getParameter("version");
		var tagName = request.getParameter("tagName");
		var deployAction = request.getParameter("deployAction");
        var deployToStagePermission = PERMISSION_DEPLOY_TO + stage;

        if (jagg.module("permission").isUserAccessGrantedForPlatform(deployToStagePermission)){
            var result =  buildModule.deployArtifact(applicationId, stage, version, tagName, deployAction);
            print(result);
        } else {
            response.result = 0;
            response.message = "You don't have permission to deploy an artifact";
            print(response);
        }
		//var result =  buildModule.deployTaggedArtifact(applicationId, stage, version, tagName);

	} else if ( action == "copyNewDependenciesAndDeployArtifact"){
		
		    ////COPY THE NEW RESOURCES.
		
    		buildModule = jagg.module("build");
    		resourcesModule = jagg.module("resources");
    		lifeCycleModule = jagg.module("lifecycle");
    		
			var applicationId = request.getParameter("applicationKey");
			var stage = request.getParameter("stage");
			var version = request.getParameter("version");
			var tagName = request.getParameter("tagName");
			var deployAction = request.getParameter("deployAction");
                        var deployToStagePermission = PERMISSION_DEPLOY_TO + stage;
			if (jagg.module("permission").isUserAccessGrantedForPlatform(deployToStagePermission)){
			try{
				if (! lifeCycleModule.isInitialLifeCycleStage(stage)){
					var sourceStage = lifeCycleModule.getPreviousLifeCycleStage(stage);				
					resourcesModule.copyNewProperties(applicationId, sourceStage, stage);
					resourcesModule.copyNewDataSources(applicationId, sourceStage, stage);
				}
			}catch(exx){
				throw new Error("Error , Resource creation fail, " + exx);
			}
			
			var result =  buildModule.deployArtifact(applicationId, stage, version, tagName, deployAction);
			print(result);
			}else {
                 var response={};
                 response.result = 0;
                 response.message = "You don't have permission to deploy an artifact";
                 print(response);
             }
		
	} else {
       throw new Error("Invalid action specified");
    }

}());
%>
