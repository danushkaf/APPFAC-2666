<%
include("/jagg/jagg.jag");
include("/jagg/constants.jag");
include("/jagg/config_reader.jag");
(function () {
    var mod, obj, result,
            action = request.getParameter("action"),
            site = require("/site/conf/site.json");
    var log = new Log();
    if (!jagg.getUser()) {
        print(UNAUTHORIZED_ERROR_RESPONSE);
        return;
    }
    var appId = request.getParameter("appId");
    mod = jagg.module("events");
    var modApplication = jagg.module("application");
    var subscriberId = jagg.getUser();
    if (subscriberId == null) {
        return;
    }
    var application_creation_topic = 'APPLICATION_CREATION';
    if (action == "subscribe") {
        var application_list = session.get("application_list");
        if(application_list == null) {
        	application_list = modApplication.getAllAppsOfUser(jagg.getUser());
            session.put('application_list', application_list);
        }
        var userApps = parse(application_list);
        for (var i = 0; i < userApps.length; i++) {
            var topic = userApps[i].key;
            try {
                if (topic != null && topic != undefined && topic != 'null') {
                    mod.subscribe(topic, subscriberId);
                }
            } catch (e) {
                log.error(e);
            }
        }
        mod.subscribe(application_creation_topic, subscriberId);
    } else if (action == "poll") {
        var messages = new Array();
        var application_list = session.get("application_list");
        if(application_list == null) {
        	application_list = modApplication.getAllAppsOfUser(jagg.getUser());
            session.put('application_list', application_list);
        }
        var userApps = parse(application_list);
        for (var i = 0; i < userApps.length; i++) {
            var topic = userApps[i].key;
            if (log.isDebugEnabled()) {
                log.debug(topic);
            }
            try {
                if (topic != null && topic != undefined && topic != 'null') {
                    var msgs = mod.pollMessages(topic, subscriberId);
                    if (msgs != null && msgs.length > 0) {
                        messages.push(msgs);
                    }
                }
            } catch (e) {
                log.error(e);
            }
        }
        var msgs = mod.pollMessages(application_creation_topic, subscriberId);
        if (msgs != null && msgs.length > 0) {
            messages.push(msgs);
        }
        print(messages);
    } else if (action == "ack") {
        var messageId = request.getParameter("messageId");
        var topic = request.getParameter("topic");
        try {
            mod.acknowledgeMessage(topic, subscriberId, messageId);
        } catch (e) {
            log.error(e);
        }

    } else {
        throw new Error("Invalid action specified");
    }
}());
%>
