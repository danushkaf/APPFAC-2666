<%
include("/jagg/jagg.jag");
include("/jagg/constants.jag");
include("/jagg/config_reader.jag");
(function () {
    var mod, obj,
            action = request.getParameter("action"),
            site = require("/site/conf/site.json");

    var log = new Log();
    if (!jagg.getUser()) {
        print(UNAUTHORIZED_ERROR_RESPONSE);
        return;
    }
    if (action == "downloadLogFile") {

        var applicationKey = request.getParameter("applicationKey");
        var stage = request.getParameter("applicationStage");
        var version = request.getParameter("applicationVersion");
        var date = request.getParameter("date");
        var downloadFile = request.getParameter("downloadFile");
        var pageNumber = request.getParameter("pageNumber");

        if(pageNumber == null || pageNumber == 'null'){
            pageNumber = -1;
        }

        mod = jagg.module("logdownload");

        var deployToStagePermission = PERMISSION_DEPLOY_TO + stage;
        if (jagg.module("permission").isUserAccessGrantedForPlatform(deployToStagePermission)){
            try {
                var result = mod.downloadLogFile(applicationKey, stage, version, date, pageNumber);

                if (downloadFile == "true") {

                    var fileName;
                    if (date == null || date == "") {

                        var d = new Date();
                        var curr_date = ("0" + d.getDate()).slice(-2);

                        var curr_month = ("0" + (d.getMonth() + 1)).slice(-2); //Months are zero based
                        var curr_year = d.getFullYear();
                        fileName = applicationKey + "_" + curr_year + "_" + curr_month + "_" + curr_date + ".log";
                    } else {
                        fileName = applicationKey + "_" + date + ".log";
                    }
                    response.contentType = 'application/txt';
                    response.addHeader('Content-Disposition', 'attachment;filename=' + fileName.toString());
                }
                print(result);
            } catch (e) {
                print({error: true, message: "Unable to download logs"});
            }
        } else {
            response.result = 0;
            response.message = "You don't have permission to download the log file";
            print(response);
        }


    } else if (action === "getAppVersionsInStages") {

        mod = jagg.module("logdownload");

        var userName = request.getParameter("userName");
        var applicationKey = request.getParameter("applicationKey");

        try {
            print(mod.getVersionsOfApplicationInStages(userName, applicationKey));
        } catch (e) {
            var msg = "Error while retrieving App Owner for app key " + applicationKey + "\n";
            log.error(msg + e.message);
            throw msg;
        }
    } else {
        log.error("No action specified");
    }
}());

%>
